/** Author: Alexander Bech* Leetcode Problem Solution* Leetcode ID: 53
*/#include <iostream>#include <algorithm>#include <vector>class Solution {public:    int maxSubArray(std::vector<int>& nums)    {	int max_sum = 0;	int temp_sum = 0;		for (int i = 0; i < nums.size(); i++)	{		if (nums[i] + temp_sum > 0)		{			temp_sum += nums[i];			if (temp_sum > max_sum)			{				max_sum = temp_sum;			}			}		else		{				temp_sum = 0;		}	}        if (max_sum == 0)        return *std::max_element(nums.begin(),nums.end());                return max_sum;    }    };/* Testing */int main(){	std::cout << "hello world" << std::endl;}