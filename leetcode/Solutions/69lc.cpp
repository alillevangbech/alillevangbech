/** Author: Alexander Bech* Leetcode Problem Solution* Leetcode ID: 69
*/#include <iostream>class Solution {public:	Solution(){};	double abs(double x)	{		if (x < 0)			return -1*x;		else			return x;	}		int mySqrt(int x) {		const double _x = (double)x;		const auto f = [](double x,double a){return x*x - a;};		const auto d_f = [](double x){return 2*x;};		const double eps = 0.000001;		double x_prev = 1;		double x_next = x_prev;				while (eps < abs(f(x_next,_x)))		{			x_next = x_prev - f(x_prev,_x)/d_f(x_prev);			x_prev = x_next;			std::cout << x_next << std::endl;		}				return (int)x_next;    }};/* Testing */int main(){	Solution sltn;	std::cout << sltn.mySqrt(0) << std::endl;}