/** Author: Alexander Bech* Leetcode Problem Solution* Leetcode ID: 83
*/#include <iostream>/** * Definition for singly-linked list.**/struct ListNode {	int val;	ListNode *next;	ListNode(int x) : val(x), next(NULL) {}};class Solution {public:	Solution(){};	ListNode* deleteDuplicates(ListNode* head)	{		if (head == NULL)			return head;				ListNode* p_prev = head;		ListNode* p = p_prev->next;		while (p != NULL)		{				// All about the order. 			if (p_prev->val == p->val)			{				p = p->next;				p_prev->next = p;			}			else			{				p_prev = p;				p = p->next;			}		}		return head;    }};/* Testing */int main(){	Solution sltn;	ListNode a(1);	ListNode b(1);	ListNode c(2);	ListNode d(4);	ListNode e(5);	a.next = &b;	a.next->next = &c;	a.next->next->next = &d;	a.next->next->next->next = &e;		ListNode *p = sltn.deleteDuplicates(&a);	while (p != NULL)	{		std::cout << p->val << std::endl;		p = p->next;	}}