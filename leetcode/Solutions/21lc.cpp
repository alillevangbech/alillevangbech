/** Author: Alexander Bech* Leetcode Problem Solution* Leetcode ID: 21
*/#include <iostream>//Definition for singly-linked list.struct ListNode {     int val;     ListNode *next;     ListNode(int x) : val(x), next(NULL) {}}; class Solution {public:ListNode* mergeTwoLists(ListNode* l1, ListNode* l2){	if (l1 == NULL)		return l2;	else if (l2 == NULL)		return l1;	ListNode* mList;	ListNode* iter;	if (l1->val >= l2->val) {		mList = l2;		l2 = l2->next;	}	else {		mList = l1;		l1 = l1->next;	}	iter = mList;	while (iter != NULL) {			if (l1 == NULL && l2 != NULL)	{		iter->next = l2;		break;	}	else if (l1 != NULL && l2 == NULL)	{		iter->next = l1;		break;	}			if (l1->val >= l2->val)	{		iter->next = l2;		l2 = l2->next;			}	else	{		iter->next = l1;		l1 = l1->next;	}	iter = iter->next;	}		return mList;}};/* Testing */int main(){}