/** Author: Alexander Bech* Leetcode Problem Solution* Leetcode ID: 100
*/#include <iostream>#include "Solutions/lc.h"//Definition for a binary tree node.class Solution {public:	Solution(){};	bool isSameTree(TreeNode* p, TreeNode* q)	{		if (q == NULL || p == NULL) return (p == q);		return (p->val == q->val && isSameTree(p->right,q->right) && isSameTree(q->left,p->left));	}	};/* Testing */int main(){	Solution sltn;	TreeNode a(1);	TreeNode b(2);	TreeNode c(3);		TreeNode* p_a = &a;	p_a->right = &b;	p_a->left = &c;		TreeNode a1(1);	TreeNode b1(2);	TreeNode c1(3);		TreeNode* p_a1 = &a1;	p_a1->right = &b1;	p_a1->right = NULL;	p_a1->left = &c1;			p_a = NULL;	p_a1 = NULL;		std::cout << sltn.isSameTree(p_a,p_a1) << std::endl;						}